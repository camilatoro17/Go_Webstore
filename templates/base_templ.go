// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Base(content templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html><head><title>Car Dealership</title><link rel=\"stylesheet\" href=\"assets/styles/styles.css\"><link rel=\"stylesheet\" href=\"assets/styles/nav.css\"></head><body><div id=\"user-role\" data-role=\"{{.Role}}\" style=\"display: none;\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = content.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script>\n        var carSelect = document.getElementById('car');\n        if (carSelect) {\n            carSelect.addEventListener('change', function() {\n                var selected = this.options[this.selectedIndex];\n                var imgURL = selected.getAttribute('data-image');\n                var quantity = selected.getAttribute('data-quantity');\n\n                console.log(\"Selected Quantity:\", quantity);\n\n                var product = document.getElementById('carimg');\n                var imgContainer = document.getElementById('carpic');\n                var quantityMessage = document.getElementById('quantity-msg');\n\n                console.log(\"Quantity Message Element:\", quantityMessage);\n\n                // Show the image\n                if (imgURL) {\n                    product.src = 'assets/images/' + imgURL;\n                    product.alt = selected.text;\n                    imgContainer.style.display = 'block';\n                } else {\n                    product.src = '';\n                    imgContainer.style.display = 'none';\n                }\n\n                // Update the quantity message\n                if (quantity) {\n                    var quantityInt = parseInt(quantity);\n                    console.log(\"Parsed Quantity:\", quantityInt); // Debugging: Log parsed quantity\n\n                    if (quantityInt === 0) {\n                        quantityMessage.textContent = \"SOLD OUT\";\n                        quantityMessage.style.color = \"red\";\n                        console.log(\"Quantity Message Set to: SOLD OUT\");\n                    } else if (quantityInt < 5) {\n                        quantityMessage.textContent = `Only ${quantityInt} left`;\n                        quantityMessage.style.color = \"orange\";\n                        console.log(`Quantity Message Set to: Only ${quantityInt} left`);\n                    } else {\n                        quantityMessage.textContent = \"\";\n                        console.log(\"Quantity Message Cleared\");\n                    }\n                } else {\n                    quantityMessage.textContent = \"\";\n                    console.log(\"Quantity Message Cleared (No quantity found)\");\n                }\n            });\n        }\n\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            // Check if there is an error message in the query string\n            const errorMsg = new URLSearchParams(window.location.search).get('error');\n            const errorMessageDiv = document.getElementById('error-message');\n            \n            if (errorMsg) {\n                errorMessageDiv.style.display = 'block'; // Show the error message\n                if (errorMsg === 'must_log_in') {\n                    errorMessageDiv.textContent = \"You must log in first.\";\n                } else if (errorMsg === 'not_authorized') {\n                    errorMessageDiv.textContent = \"You are not authorized to view this page.\";\n                }\n            }\n        });\n    </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func header() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<header><h1>Go Webstore</h1><div class=\"nav-container\"><ul class=\"nav\"><li><a href=\"/\">Home</a></li><li><a href=\"/store\">Store</a></li><li class=\"admin-link\" style=\"display: none;\"><a href=\"/admin\">Admin</a></li><li class=\"products-link\" style=\"display: none;\"><a href=\"/products\">Products</a></li><li class=\"order-entry-link\" style=\"display: none;\"><a href=\"/order_entry\">Order Entry</a></li><li id=\"logout-link\" style=\"float: right; display: none;\"><a href=\"/logout\">Logout</a></li></ul></div><div class=\"user-info\"><p id=\"user-greeting\">Welcome, Guest</p></div><div id=\"error-message\" style=\"display: none; color: red; font-weight: bold; text-align: center;\"></div></header><script>\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            function getCookie(name) {\n                const value = `; ${document.cookie}`;\n                const parts = value.split(`; ${name}=`);\n                if (parts.length === 2) return parts.pop().split(';').shift();\n                return null;\n            }\n\n            const userRole = getCookie('user_role');\n            const userName = getCookie('user_name');\n\n            console.log(\"role:\", userRole);\n            console.log(\"username:\", userName); \n\n            const greeting = document.getElementById('user-greeting');\n            if (userName) {\n                greeting.textContent = `Welcome ${userName}!`;\n            } else {\n                greeting.textContent = \"Welcome Guest!\";\n            }\n\n            // menu options based on role\n            if (userRole === \"1\") {\n                // customer Service\n                document.querySelector(\".order-entry-link\").style.display = \"block\";\n                document.getElementById(\"logout-link\").style.display = \"block\";\n            } else if (userRole === \"2\") {\n                // admin\n                document.querySelector(\".order-entry-link\").style.display = \"block\";\n                document.querySelector(\".products-link\").style.display = \"block\";\n                document.querySelector(\".admin-link\").style.display = \"block\";\n                document.getElementById(\"logout-link\").style.display = \"block\";\n            } else if (userRole === \"0\") {\n                // guest\n                console.log(\"Guest logged in\");\n                document.getElementById(\"logout-link\").style.display = \"none\";\n                document.querySelector(\".order-entry-link\").style.display = \"none\";\n                document.querySelector(\".products-link\").style.display = \"none\";\n                document.querySelector(\".admin-link\").style.display = \"none\";\n            } else {\n                // if no role is found\n                console.log(\"No role found, treating as guest\");\n                greeting.textContent = \"Welcome Guest!\";\n            }\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
